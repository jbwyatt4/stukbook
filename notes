git notes
git reset --hard head # forces all uncommited changes back to HEAD commit (your last commit)

force a reset to github
git reset --hard 0ea154e9e63007d47cea1f7b1becf7d48f2363ce
git push -u origin master -f

changed navbar default and forced it to stay ontop
navbar-inverse
navbar-fixed-top

this causes navbar to be imposed over the main page, fix with css rule
app/assets/stylesheets/pages.css.scss (what? use application.css.scss)
body {
  padding-top: 70px;
}

flash
stretches across screen, below css moves into a box that overlays itself (with z-index: 1) atop of everything and looks terrible.
<% flash.each do |type, message| %>
  <div class="alert alert-info fade-in">
    <button class="close" data-dismiss="alert">x</button>
    <%= message %>
  </div>
<% end %>

.alert {
  position: absolute;
  z-index: 1;
  width: 200px;
}

put css into application css instead of show css

use a container tag everytime you want to shrink the borders

Self-Referential Association
has_many :friendships, dependent: :destroy
has_many :inverse_friendships, class_name: "Friendship", foreign_key: "friend_id", dependent: :destroy

def request_friendship(user_2)
  self.friendships.create(friend: user_2)
end

# join the two friendship associations
def active_friends
  self.friendships.where(state: "active").map(&:friend) + self.inverse_friendships.where(state: "active").map(&:friend)
end

Clean database
rake db:drop db:create db:migrate db:seed
(this actually works)

params
at url users?people=friends

handling little infs
class: "btn btn-default #{'active' if params[:people] == 'friends'}"
or
class: "btn btn-default #{'active' unless params[:people]}"

public_activity
after installing gem
rails g public_activity:migration
add include PublicActivity::Model to model you want to track

PublicActivity::Activity.all

--Show the last 16 friends
@user.active_friends.last(16)

auto_html
rails g model post user_id:integer content:text content_html:text

bootsnip
www.bootsnipp.com/snippets/featured/timeline-responsive

Very imporant, cycle between odd and even and use an index
<% @activities.each_with_index do |activity| %>

  <% if activity.trackable %>

  <!---Cycle between odd and even!!! --->
  <% if cycle('odd', 'even') == 'odd' %>
    <li class="timeline-inverted">
  <% else %>
    <li>
  <% end %>

<% end %>

Eliminate duplicate activity mentions
just filter a specific type of activity, no tracking filtering, if you have two friends and they add each other, you will still get duplicates


Unicorn
devcenter.heroku.com/articles/rails-unicorn
heroku looks for procfile, used for advanced applications

--------------------------
# config/unicorn.rb
worker_processes Integer(ENV["WEB_CONCURRENCY"] || 3) # checks if web_currency var is set, otherwise 3 worker processes at a time
timeout 15 # 15 seconds
preload_app true

# terminate any current processes
before_fork do |server, worker|
  Signal.trap 'TERM' do
    puts 'Unicorn master intercepting TERM and sending myself QUIT instead'
    Process.kill 'QUIT', Process.pid
  end

  defined?(ActiveRecord::Base) and
    ActiveRecord::Base.connection.disconnect!
end

after_fork do |server, worker|
  Signal.trap 'TERM' do
    puts 'Unicorn worker intercepting TERM and doing nothing. Wait for master to send QUIT'
  end

  defined?(ActiveRecord::Base) and
    ActiveRecord::Base.establish_connection
end
----------------------

# config/unicorn.rb
worker_processes Integer(ENV["WEB_CONCURRENCY"] || 3)
timeout 15
preload_app true

before_fork do |server, worker|
  Signal.trap 'TERM' do
    puts 'Unicorn master intercepting TERM and sending myself QUIT instead'
    Process.kill 'QUIT', Process.pid
  end

  defined?(ActiveRecord::Base) and
    ActiveRecord::Base.connection.disconnect!
end

after_fork do |server, worker|
  Signal.trap 'TERM' do
    puts 'Unicorn worker intercepting TERM and doing nothing. Wait for master to send QUIT'
  end

  defined?(ActiveRecord::Base) and
    ActiveRecord::Base.establish_connection
end

procfile
web: bundle exec unicorn -p $PORT -c ./config/unicorn.rb

precompile
type in terminal in your rails directory, doesn't work if you don't install postgres on local machine
RAILS_ENV=production bundle exec rake assets:precompile
